{
	"compiler": {
		"version": "0.8.19+commit.7dd6d404"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_router",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_link",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "currentBalance",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "calculatedFees",
						"type": "uint256"
					}
				],
				"name": "NotEnoughBalance",
				"type": "error"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "messageId",
						"type": "bytes32"
					},
					{
						"indexed": true,
						"internalType": "uint64",
						"name": "destinationChainSelector",
						"type": "uint64"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "receiver",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "text",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "feeToken",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "fees",
						"type": "uint256"
					}
				],
				"name": "MessageSent",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "uint64",
						"name": "destinationChainSelector",
						"type": "uint64"
					},
					{
						"internalType": "address",
						"name": "receiver",
						"type": "address"
					},
					{
						"internalType": "string",
						"name": "text",
						"type": "string"
					}
				],
				"name": "sendMessage",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "messageId",
						"type": "bytes32"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"constructor": {
					"params": {
						"_link": "The address of the link contract.",
						"_router": "The address of the router contract."
					}
				},
				"sendMessage(uint64,address,string)": {
					"details": "Assumes your contract has sufficient LINK.",
					"params": {
						"destinationChainSelector": "The identifier (aka selector) for the destination blockchain.",
						"receiver": "The address of the recipient on the destination blockchain.",
						"text": "The string text to be sent."
					},
					"returns": {
						"messageId": "The ID of the message that was sent."
					}
				}
			},
			"title": "- A simple contract for sending string data across chains.",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"constructor": {
					"notice": "Constructor initializes the contract with the router address."
				},
				"sendMessage(uint64,address,string)": {
					"notice": "Sends data to receiver on the destination chain."
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"Sender.sol": "Sender"
		},
		"evmVersion": "paris",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"Sender.sol": {
			"keccak256": "0x5a7b026b840d0dda96cd01a4897695bb741182a1f37fc99d152b0387846727d8",
			"license": "MIT",
			"urls": [
				"bzz-raw://0cee8406d44286a558e3773272bdf84345e211d064fe06d9a8533c8fe84e854f",
				"dweb:/ipfs/QmXRJMD5q1jGHexrWVqZNW3557dgUzUcEEewS6ybabbKMZ"
			]
		}
	},
	"version": 1
}